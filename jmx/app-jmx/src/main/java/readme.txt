JMX Java Management Extension
	·JMX 为应用程序提供一个窗口/应用程序的外部接口管理
		管理功能：查看或修改系统属性配置，调用管理操作(xxxStatus(), xxxStart(), xxxStop())
		监视功能：通过此窗口可以监测应用程序的运行状态：JVM状态、任务执行情况
		
	 
1. 提供应用程序的运行状态的监测功能
	·监测JVM运行状态和各项属性-jconsole 客户端
	·监测任务的执行情况
		查看排队等候处理的任务的数量和类型
		当前正在处理的任务
		平均任务处理时间
		已处理多少任务


2. 实时读写系统配置，触发任务的执行与停止
	·提供外部可操作的接口，当此接口被触发时，重新加载配置到缓存中
		配置信息存在数据库，在客户端调用reload()，重新查询数据库
		活动开始日期，在客户端调用setBeginDate()，重新配置开始日期
		等等

================================================================
JMX客户端
	JConsole
	HTML
	HTTP

用户认证
	用户配置
	SSL

================================================================

MBean: 提供与实体的管理有关的访问器和业务方法的 JavaBean
MBeanServer: 充当 MBean 的容器，提供远程访问、命名空间管理和安全服务
JConsole: 统一的 JMX 客户机, 提供内存管理视图、用户自定义MBean管理操作界面

传输和安全性
	·内置传输：本地连接
	·远程传输：RMI、socket 或 SSL 用口令或证书进行认证

远程调用框架（RMI、EJB 和 JAX-RPC、HTTP）

数据类型
	MBean 中的访问器和操作能够用任何其签名形式的原语类型，以及 String、Date 和其他标准库类。也可以使用这些允许的类型的数组和集合。
	MBean 方法也可以使用其他可以序列化的数据类型，但是这样做会造成互操作性问题，因为类文件也必须对 JMX 客户机可用。
	（如果使用 RMI 传输，可以使用 RMI 的自动类下载特性完成这项任务。）
	如果想在管理接口中使用结构化数据类型，还想避免与类可用性相关的互操作性问题，可以使用 JMX 的开放 MBean 特性来表达复合或表格数据。

结束语
	应用程序导出管理接口，此接口让您可以查看它操作的内容，那么您就会更加了解它的运行状态
	——对它是否按预期的方式工作也会更有信心
	——而不必求助于额外的工具（例如添加日志代码或使用调试器或分析器）。
	