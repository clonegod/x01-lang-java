<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!-- 继承：超级pom的坐标，该pom中的配置用于其它模块继承所用 -->
	<groupId>com.asynclife</groupId>
	<artifactId>app-parent</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<!-- 聚合：聚合其它模块 -->
	<modules>
		<module>../app-util</module>
		<module>../app-jbpm</module>
	</modules>

	<!-- 配置项目发布到私服的哪个仓库中 -->
	<distributionManagement>
		<snapshotRepository>
			<id>APP-SNAPSHOT</id>
			<url>http://localhost:8081/nexus/content/repositories/snapshots/</url>
		</snapshotRepository>
		<repository>
			<id>APP-release</id>
			<url>http://localhost:8081/nexus/content/repositories/releases/</url>
		</repository>
	</distributionManagement>

	<properties>
		<!-- 指定sourceEncoding可解决MVN在CMD命令行（操作系统GBK编码）下输出UTF-8不支持字符的错误 -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- Generic properties -->
		<java.version>1.7</java.version>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<!-- Spring -->
		<spring-framework.version>4.1.6.RELEASE</spring-framework.version>
		<spring-data-jpa.version>1.8.0.RELEASE</spring-data-jpa.version>


		<!-- Java EE / Java SE dependencies -->
		<jsp.version>2.2</jsp.version>
		<jstl.version>1.2</jstl.version>
		<tomcat.servlet.version>7.0.47</tomcat.servlet.version>
		<jaxb-impl.version>2.2.7</jaxb-impl.version>

		<!-- Hibernate / JPA -->
		<hibernate.version>4.3.8.Final</hibernate.version>

		<!-- Bean validation -->
		<hibernate-validator.version>4.3.1.Final</hibernate-validator.version>

		<!-- Database access -->
		<tomcat-jdbc.version>7.0.42</tomcat-jdbc.version>
		<ehcache.version>2.6.10</ehcache.version>
		<hsqldb.version>2.3.2</hsqldb.version>

		<!-- AOP -->
		<aspectj.version>1.8.5</aspectj.version>

		<!-- Logging -->
		<logback.version>1.1.3</logback.version>
		<slf4j.version>1.7.12</slf4j.version>

		<!-- JSon -->
		<json-path.version>2.0.0</json-path.version>

		<!-- Test -->
		<junit.version>4.12</junit.version>
		<assertj.version>3.0.0</assertj.version>

		<!-- Dates -->
		<jodatime-hibernate.version>1.3</jodatime-hibernate.version>
		<jodatime-jsptags.version>1.1.1</jodatime-jsptags.version>
		<jodatime.version>2.7</jodatime.version>
		<jadira-usertype-core.version>3.2.0.GA</jadira-usertype-core.version>


		<!-- Web dependencies -->
		<webjars-bootstrap.version>2.3.0</webjars-bootstrap.version>
		<webjars-jquery-ui.version>1.10.3</webjars-jquery-ui.version>
		<webjars-jquery.version>2.0.3-1</webjars-jquery.version>
		<dandelion.version>0.10.1</dandelion.version>

		<mysql.version>5.1.22</mysql.version>

		<cobertura.version>2.7</cobertura.version>


		<dwr.version>3.0.0-RELEASE</dwr.version>

		<itext.version>4.2.1</itext.version>
	</properties>

	<!-- 通过dependencyManagement封装需要被子模块继承的依赖包，子类通过GV即可继承依赖 -->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>app-util</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>2.4</version>
			</dependency>

			<dependency>
				<groupId>org.jadira.usertype</groupId>
				<artifactId>usertype.core</artifactId>
				<version>${jadira-usertype-core.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.tomcat</groupId>
				<artifactId>tomcat-servlet-api</artifactId>
				<version>${tomcat.servlet.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>javax.servlet.jsp</groupId>
				<artifactId>jsp-api</artifactId>
				<version>2.1</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>org.glassfish.web</groupId>
				<artifactId>jstl-impl</artifactId>
				<version>1.2</version>
				<exclusions>
					<exclusion>
						<groupId>javax.servlet</groupId>
						<artifactId>servlet-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>com.sun.xml.bind</groupId>
				<artifactId>jaxb-impl</artifactId>
				<version>${jaxb-impl.version}</version>
				<scope>provided</scope>
			</dependency>
			<!-- JSon -->
			<dependency>
				<groupId>com.jayway.jsonpath</groupId>
				<artifactId>json-path</artifactId>
				<version>${json-path.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>fastjson</artifactId>
				<version>1.2.6</version>
			</dependency>
			<dependency>
				<groupId>com.google.code.gson</groupId>
				<artifactId>gson</artifactId>
				<version>2.3.1</version>
			</dependency>
			<!-- SPRING, SPRING, SPRINGITY SPRING -->
			<dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-jpa</artifactId>
				<version>${spring-data-jpa.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>*</artifactId>
					</exclusion>
					<!-- because Spring Data usually comes with a slightly older version 
						of Spring -->
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jdbc</artifactId>
				<version>${spring-framework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aop</artifactId>
				<version>${spring-framework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>${spring-framework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-tx</artifactId>
				<version>${spring-framework.version}</version>
			</dependency>
			<!-- used for EhCacheCacheManager -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context-support</artifactId>
				<version>${spring-framework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-orm</artifactId>
				<version>${spring-framework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-oxm</artifactId>
				<version>${spring-framework.version}</version>
				<exclusions>
					<exclusion>
						<groupId>commons-lang</groupId>
						<artifactId>commons-lang</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjrt</artifactId>
				<version>${aspectj.version}</version>
			</dependency>
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjweaver</artifactId>
				<version>${aspectj.version}</version>
				<scope>runtime</scope>
			</dependency>

			<!-- Database connection pool See here for more details on commons-dbcp 
				versus tomcat-jdbc: http://blog.ippon.fr/2013/03/13/improving-the-performance-of-the-spring-petclinic-sample-application-part-3-of-5/ -->
			<dependency>
				<groupId>org.apache.tomcat</groupId>
				<artifactId>tomcat-jdbc</artifactId>
				<version>${tomcat-jdbc.version}</version>
				<scope>runtime</scope>
			</dependency>

			<!-- Logging with SLF4J & LogBack -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback.version}</version>
				<scope>runtime</scope>
			</dependency>

			<!-- Date and Time -->
			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>${jodatime.version}</version>
			</dependency>
			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time-hibernate</artifactId>
				<version>${jodatime-hibernate.version}</version>
			</dependency>
			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time-jsptags</artifactId>
				<version>${jodatime-jsptags.version}</version>
			</dependency>

			<!-- Databases - Uses HSQL by default -->
			<!-- <dependency> <groupId>mysql</groupId> <artifactId>mysql-connector-java</artifactId> 
				<version>${mysql.version}</version> </dependency> -->
			<dependency>
				<groupId>org.hsqldb</groupId>
				<artifactId>hsqldb</artifactId>
				<version>${hsqldb.version}</version>
				<scope>runtime</scope>
			</dependency>

			<!-- For MySql only -->
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${mysql.version}</version>
			</dependency>
			<!-- HIBERNATE -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-entitymanager</artifactId>
				<version>${hibernate.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>${hibernate-validator.version}</version>
			</dependency>

			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-ehcache</artifactId>
				<version>${hibernate.version}</version>
			</dependency>
			<dependency>
				<groupId>net.sf.ehcache</groupId>
				<artifactId>ehcache-core</artifactId>
				<version>${ehcache.version}</version>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-c3p0</artifactId>
				<version>${hibernate.version}</version>
			</dependency>

			<!-- Webjars (static dependencies distributed as JAR files) -->
			<dependency>
				<groupId>org.webjars</groupId>
				<artifactId>bootstrap</artifactId>
				<version>${webjars-bootstrap.version}</version>
			</dependency>
			<dependency>
				<groupId>org.webjars</groupId>
				<artifactId>jquery-ui</artifactId>
				<version>${webjars-jquery-ui.version}</version>
			</dependency>
			<dependency>
				<groupId>org.webjars</groupId>
				<artifactId>jquery</artifactId>
				<version>${webjars-jquery.version}</version>
			</dependency>

			<!-- Test Artifacts -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${spring-framework.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.assertj</groupId>
				<artifactId>assertj-core</artifactId>
				<version>${assertj.version}</version>
			</dependency>

			<!-- Dandelion -->
			<dependency>
				<groupId>com.github.dandelion</groupId>
				<artifactId>datatables-jsp</artifactId>
				<version>${dandelion.version}</version>
			</dependency>
			<dependency>
				<groupId>com.github.dandelion</groupId>
				<artifactId>datatables-export-itext</artifactId>
				<version>${dandelion.version}</version>
			</dependency>

			<!-- comprise -->
			<dependency>
				<groupId>net.sourceforge.pjl-comp-filter</groupId>
				<artifactId>pjl-comp-filter</artifactId>
				<version>1.7</version>
			</dependency>


			<!-- DWR -->
			<dependency>
				<groupId>org.directwebremoting</groupId>
				<artifactId>dwr</artifactId>
				<version>${dwr.version}</version>
			</dependency>
			<dependency>
				<groupId>com.lowagie</groupId>
				<artifactId>itext</artifactId>
				<version>${itext.version}</version>
			</dependency>
			<dependency>
				<groupId>com.itextpdf</groupId>
				<artifactId>itext-asian</artifactId>
				<version>5.2.0</version>
			</dependency>

			<dependency>
				<groupId>commons-fileupload</groupId>
				<artifactId>commons-fileupload</artifactId>
				<version>1.3.1</version>
			</dependency>
			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>1.9.2</version>
			</dependency>

			<!-- compress js size -->
			<dependency>
				<groupId>com.yahoo.platform.yui</groupId>
				<artifactId>yuicompressor</artifactId>
				<version>2.4.8</version>
			</dependency>

			<dependency>
				<groupId>org.jooq</groupId>
				<artifactId>jooq</artifactId>
				<version>3.6.0</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.4</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<finalName>myframework</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<compilerArgument>-Xlint:all</compilerArgument>
					<showWarnings>true</showWarnings>
					<showDeprecation>true</showDeprecation>
				</configuration>
			</plugin>
			<!-- jetty插件 -->
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>maven-jetty-plugin</artifactId>
				<version>6.1.10</version>
				<configuration>
					<scanIntervalSeconds>1000</scanIntervalSeconds>
				</configuration>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<!-- 打包项目的所有依赖包 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>2.5.1</version>
					<executions>
						<execution>
							<id>copy-dependencies</id>
							<phase>package</phase>
							<goals>
								<goal>copy-dependencies</goal>
							</goals>
							<configuration>
								<outputDirectory>
									${project.build.directory}/dependency-jars/
								</outputDirectory>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>

		</pluginManagement>
	</build>


</project>
