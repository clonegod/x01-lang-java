<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
	<!--导入属性配置 
		1、resource 指定**classpath**下的属性文件
		2、url 指定文件系统上的特定位置
	-->
    <properties resource="generator\\generator.properties" />
    <!-- 
    <properties url="file:///E:\\playground\\Arch_Learning\\clonegod-mybatis\\src\\main\\resources\\generator\\generator.properties" />
     -->
     
    <!--指定特定数据库的jdbc驱动jar包的位置 -->
    <classPathEntry location="${jdbc_driverLocation}" />
    
    <context id="MysqlTables" targetRuntime="MyBatis3">
    	<!-- 
    		元素类型为 "context" 的内容必须匹配 (子标签有严格的先后顺序)"(
    			property*,
    			plugin*,
    			commentGenerator?,
    			(connectionFactory|jdbcConnection),
    			javaTypeResolver?,
    			javaModelGenerator,
    			sqlMapGenerator?,
    			javaClientGenerator?,
    			table+)"。
    	 
        <plugin type="org.mybatis.generator.plugins.CachePlugin"></plugin>
    	 -->
    	 <!-- 自定义的插件，功能：删除已有的xml mapper文件 -->
        <plugin type="org.mybatis.generator.plugins.DeleteExistingSqlMapsPlugin"/>
        <plugin type="org.mybatis.generator.plugins.FluentBuilderMethodsPlugin"/>
        <plugin type="org.mybatis.generator.plugins.ToStringPlugin"/>
        <plugin type="org.mybatis.generator.plugins.EqualsHashCodePlugin"/>
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"/>
        <plugin type="org.mybatis.generator.plugins.MapperAnnotationPlugin"/>
        
        <!--去除注释  -->
        <commentGenerator>
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>
		
		<!-- 配置JDBC连接 -->
        <jdbcConnection driverClass="${jdbc_driverClass}"
                        connectionURL="${jdbc_url}"
                        userId="${jdbc_user}"
                        password="${jdbc_password}">
        </jdbcConnection>
		
		<!-- 非必需，类型处理器，在数据库类型和java类型之间的转换控制-->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>
		
		<!-- 生成JavaBean -->
		<!-- Model模型生成器,用来生成含有主键key的类，记录类 以及查询Example类
            targetPackage     指定生成的model生成所在的包名
            targetProject     指定在该项目下所在的路径
        -->
        <javaModelGenerator targetPackage="${modelPackage}" targetProject="${targetProject}">
            <property name="enableSubPackages" value="true"/>
            <property name="trimStrings" value="true"/>
            <property name="immutable" value="false"/>
        </javaModelGenerator>

		<!-- 生成Mapper.xml -->
		<!--Mapper.xml 映射文件生成的目录.为每一个数据库的表生成对应的SqlMap文件 -->
        <sqlMapGenerator targetPackage="${XMLMapperPackage}" targetProject="${targetProject}">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>

		<!-- 生成Mapper.java接口 -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="${daoPackage}" targetProject="${targetProject}">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>
		
		<!-- 配置需要应用generator的表 -->
		<!-- Example：通过对象来完成SQL数据的书写，类似JOOQ
			不建议使用Example的原因：通过编码的方式实现SQL查询，则无法对SQL进行审查（绕过了DBA） 
		-->
        <table schema="blogs" tableName="author" domainObjectName="Author"
        		enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false"
                enableSelectByExample="false" selectByExampleQueryId="false">
            <property name="useActualColumnNames" value="false"/>
            <generatedKey column="id" sqlStatement="MySql" identity="true"/>
        </table>
        
        <table schema="blogs" tableName="blog" domainObjectName="Blog"        		
        		enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false"
                enableSelectByExample="false" selectByExampleQueryId="false">
            <property name="useActualColumnNames" value="false"/>
            <generatedKey column="id" sqlStatement="MySql" identity="true"/>
        </table>
        
        <table schema="blogs" tableName="post" domainObjectName="Post"        		
        		enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false"
                enableSelectByExample="false" selectByExampleQueryId="false">
            <property name="useActualColumnNames" value="false"/>
            <generatedKey column="id" sqlStatement="MySql" identity="true"/>
        </table>
        
        <table schema="blogs" tableName="comment" domainObjectName="Comment"        		
        		enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false"
                enableSelectByExample="false" selectByExampleQueryId="false">
            <property name="useActualColumnNames" value="false"/>
            <generatedKey column="id" sqlStatement="MySql" identity="true"/>
        </table>
        
        <table schema="blogs" tableName="tag" domainObjectName="Tag"        		
        		enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false"
                enableSelectByExample="false" selectByExampleQueryId="false">
            <property name="useActualColumnNames" value="false"/>
            <generatedKey column="id" sqlStatement="MySql" identity="true"/>
        </table>

    </context>
</generatorConfiguration>