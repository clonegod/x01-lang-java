<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.asynclife</groupId>
	<artifactId>spring-boot</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>demo</name>
	<description>Demo project for Spring Boot</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.2.5.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<profiles>
		<profile>
			<id>fastinstall</id>
			<properties>
				<maven.test.skip>true</maven.test.skip>
			</properties>
		</profile>
	</profiles>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.7</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
		</dependency>

		<dependency>
			<groupId>org.jooq</groupId>
			<artifactId>jooq</artifactId>
			<version>3.6.2</version>
		</dependency>
		<dependency>
			<groupId>org.jooq</groupId>
			<artifactId>jooq-meta</artifactId>
			<version>3.6.2</version>
		</dependency>
		<dependency>
			<groupId>org.jooq</groupId>
			<artifactId>jooq-codegen</artifactId>
			<version>3.6.2</version>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.36</version>
		</dependency>

		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.8.1</version>
		</dependency>

	</dependencies>

	<build>
		<plugins>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-source-plugin</artifactId> 
				<executions> <execution> <id>attach-sources</id> <phase>verify</phase> <goals> 
				<goal>jar</goal> </goals> </execution> </executions> </plugin> -->

			<!-- 拷贝资源文件时，使用UTF-8编码 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

			<!-- 编译器 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

			<!-- 单元测试 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.7.2</version>
				<configuration>
					<forkMode>once</forkMode> <!-- forkMode=once: 执行test-phrase时，新开JVM进程运行 -->
					<argLine>-Dfile.encoding=UTF-8</argLine>
				</configuration>
			</plugin>

			<!-- web service -->
			<plugin>
				<groupId>org.jvnet.jax-ws-commons</groupId>
				<artifactId>jaxws-maven-plugin</artifactId>
				<version>2.3</version>
				<executions>
					<execution>
						<goals>
							<goal>wsimport</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<wsdlUrls>
					</wsdlUrls>
					<sourceDestDir>${basedir}/target/generated</sourceDestDir>
					<bindingDirectory>
						${basedir}/src/main/resources/binding
					</bindingDirectory>
				</configuration>
			</plugin>

			<!-- JOOQ code generating -->
			<plugin>
				<!-- Specify the maven code generator plugin -->
				<groupId>org.jooq</groupId>
				<artifactId>jooq-codegen-maven</artifactId>
				<version>3.6.1</version>

				<!-- The plugin should hook into the generate goal -->
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>

				<!-- Specify the plugin configuration. The configuration format is the 
					same as for the standalone code generator -->
				<!-- Configure the database connection here -->
				<configuration>
					<!-- JDBC connection parameters -->
					<jdbc>
						<driver>com.mysql.jdbc.Driver</driver>
						<url>jdbc:mysql://localhost:3306/library</url>
						<user>root</user>
						<password>root123</password>
					</jdbc>

					<!-- Generator parameters -->
					<generator>
						<!-- The default code generator. You can override this one, to generate 
							your own code style Defaults to org.jooq.util.DefaultGenerator -->
						<name>org.jooq.util.DefaultGenerator</name>

						<database>
							<!-- The database type. The format here is:org.util.[database].[database]Database -->
							<name>org.jooq.util.mysql.MySQLDatabase</name>
							<!-- The database database name to be generated -->
							<inputSchema>library</inputSchema>
							<!-- All elements that are generated from your schema (A Java regular 
								expression. Use the pipe to separate several expressions) Watch out for case-sensitivity. 
								Depending on your database, this might be important! -->
							<includes>.*</includes>
							<!-- All elements that are excluded from your schema (A Java regular 
								expression. Use the pipe to separate several expressions). Excludes match 
								before includes -->
							<excludes></excludes>
						</database>
						<target>
							<!-- The destination package of your generated classes (within the 
								destination directory) -->
							<packageName>org.jooq.test.modle</packageName>
							<!-- The destination directory of your generated classes -->
							<directory>target/generated-sources/jooq-mysql</directory>
						</target>
					</generator>
				</configuration>
			</plugin>

			<!-- jetty -->
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>maven-jetty-plugin</artifactId>
				<version>6.1.26</version>
				<configuration>
					<reload>manual</reload>
					<stopKey>stop</stopKey>
					<stopPort>9966</stopPort>
				</configuration>
			</plugin>
		</plugins>
	</build>


</project>
